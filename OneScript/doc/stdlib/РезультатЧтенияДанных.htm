<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>РезультатЧтенияДанных</title>
</head>
<body>
    <h1>РезультатЧтенияДанных / ReadDataResult</h1>
<p>Содержит описание результата чтения данных из потока.</p>
<h2>Свойства</h2>
<h3>ИндексМаркера / MarkerIndex</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Число (Number)</p>
<p>Индекс найденного маркера.</p>
<h3>МаркерНайден / MarkerFound</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Содержит признак обнаружения маркера:</p>
<ul>
<li>Истина - если в процессе чтения данных был обнаружен маркер.</li>
<li>Ложь - если маркер не был найден или операция не предполагала поиска маркера.</li>
</ul>
<h3>Размер / Size</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Число (Number)</p>
<p>Размер данных в байтах. В некоторых случаях может быть равен нулю. Например, при чтении двоичных данных из конца потока или при разделении данных.</p>
<h2>Методы</h2>
<h3>ОткрытьПотокДляЧтения / OpenStreamForRead()</h3>
<p>Открывает поток для чтения данных.</p>
<h4>Возвращаемое значение</h4>
<p>Представляет собой поток данных, который можно последовательно читать и/или в который можно последовательно писать.
Экземпляры объектов данного типа можно получить с помощью различных методов других объектов.</p>
<h3>ПолучитьБуферДвоичныхДанных / GetBinaryDataBuffer()</h3>
<p>Получает результат в виде буфера двоичных данных. Необходимо учитывать, что при этом данные будут полностью загружены в оперативную память. Если требуется избежать загрузки оперативной памяти, следует использовать другие методы получения двоичных данных.</p>
<h4>Возвращаемое значение</h4>
<p>Коллекция байтов фиксированного размера с возможностью произвольного доступа и изменения по месту.</p>
<h3>ПолучитьДвоичныеДанные / GetBinaryData()</h3>
<p>Получает результат чтения в виде двоичных данных.</p>
<h4>Возвращаемое значение</h4>

</body>
</html>