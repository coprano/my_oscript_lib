<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>ЗаписьДанных</title>
</head>
<body>
    <h1>ЗаписьДанных / DataWriter</h1>
<p>Объект предназначен для удобной записи различных типов данных в приемник.
Необходимо соблюдать следующий порядок работы с данным объектом:</p>
<ul>
<li>Создать или получить приемник даных.</li>
<li>Вызвать из приемника экземпляр объекта ЗаписьДанных.</li>
<li>Выполнить требуемые действия с помощью объекта.</li>
<li>Закрыть экземпляр объекта ЗаписьДанных.
При необходимости использовать другие методы для работы с данными, требуется сначала закрыть экземпляр объекта ЗаписьДанных с помощью метода Закрыть, выполнить необходимые действия над данными, установить требуемую позицию для чтения из приемника и создать новый экземпляр ЗаписьДанных.</li>
</ul>
<h2>Свойства</h2>
<h3>КодировкаТекста / TextEncoding</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: КодировкаТекста (TextEncoding), Строка (String)</p>
<p>Кодировка текста по-умолчанию для данного экземпляра ЗаписьДанных.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки.</p>
<h3>КонвертируемыйРазделительСтрок / ConvertibleSplitterOfLines</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Строка (String)</p>
<p>Конвертируемый разделитель строк. Этот параметр влияет на поведение метода ЗаписатьСимволы.</p>
<h3>ПорядокБайтов / ByteOrder</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: ПорядокБайтов (ByteOrder)</p>
<p>Порядок байтов по умолчанию.</p>
<h3>РазделительСтрок / LineSplitter</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Строка (String)</p>
<p>Разделитель строк по-умолчанию. Это свойство влияет на поведение метода ЗаписатьСтроку.</p>
<h2>Методы</h2>
<h3>Закрыть / Close()</h3>
<p>Вызывает метод СброситьБуферы. Если целевой поток был создан при создании объекта ЗаписьДанных, целевой поток также закрывается.</p>
<h3>Записать / Write()</h3>
<p>Записывает данные в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li><em>binaryDataOrReadResult</em>: Записать экземпляр объекта ДвоичныеДанные в поток.</li>
</ul>
<h3>ЗаписатьБайт / WriteByte()</h3>
<p>Записывает один байт в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li><em>number</em>: Целое число, которое будет записано в целевой поток. Значение числа должно находиться в диапазоне от 0 до 255.</li>
</ul>
<h3>ЗаписатьБуферДвоичныхДанных / WriteBinaryDataBuffer()</h3>
<p>Записать байты из буфера двоичных данных в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>buffer</em>: Буфер двоичных данных, который используется в качестве источника данных для записи в целевой поток.</p>
</li>
<li>
<p><em>positionInBuffer</em>: Позиция в буфере, начиная с которой выполняется чтение байтов для записи в целевой поток.</p>
</li>
<li>
<p><em>number</em>: Количество байтов, которые требуется записать в целевой поток.</p>
</li>
</ul>
<h3>ЗаписатьСимволы / WriteChars()</h3>
<p>Записывает символы заданной строки в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>line</em>: Строка, символы которой будут записаны в поток.</p>
</li>
<li>
<p><em>encoding</em>: Определяет кодировку текста для записи строки. Если не установлена, используется кодировка, заданная для данного объекта ЗаписьДанных.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки.</p>
</li>
</ul>
<h3>ЗаписатьСтроку / WriteLine()</h3>
<p>Записывает строку в целевой поток.
Сначала записываются все символы строки, затем - разделитель строк.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>line</em>: Строка, которая будет записана в поток.</p>
</li>
<li>
<p><em>encoding</em>: Определяет кодировку текста для записи строки. Если не установлена, используется кодировка, заданная для данного объекта ЗаписьДанных.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки.
Значение по умолчанию: Неопределено. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
</li>
<li>
<p><em>lineSplitter</em>: Указывает строку, являющуюся разделителем строк в потоке после записи символов строк. Если параметр не указан, используется разделитель строк, указанный для текущего экземпляра объекта ЗаписьДанных.
Значение по умолчанию: Неопределено.</p>
</li>
</ul>
<h3>ЗаписатьЦелое16 / WriteInt16()</h3>
<p>Записывает 16-разрядное число в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>number</em>: Число, которое будет записано в целевой поток.
Значение числа должно находиться в диапазоне от 0 до 65535.</p>
</li>
<li>
<p><em>byteOrder</em>: Порядок байтов, который будет использован для кодировки числа при записи. Если не установлен, то будет использован порядок байтов, заданный для текущего экземпляра объекта ЗаписьДанных.
Значение по умолчанию: Неопределено.</p>
</li>
</ul>
<h3>ЗаписатьЦелое32 / WriteInt32()</h3>
<p>Записать целое 32-битное число в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>number</em>: Целое число, которое будет записано в целевой поток. Значение числа должно находиться в диапазоне от 0 до 2^32-1.</p>
</li>
<li>
<p><em>byteOrder</em>: Порядок байтов, который будет использован для кодировки числа при записи. Если не установлен, то будет использован порядок байтов, заданный для текущего экземпляра объекта ЗаписьДанных.
Значение по умолчанию: Неопределено.</p>
</li>
</ul>
<h3>ЗаписатьЦелое64 / WriteInt64()</h3>
<p>Записывает целое 64-битное число в целевой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>number</em>: Целое число, которое будет записано в целевой поток. Значение числа должно находиться в диапазоне от 0 до 2^64-1.</p>
</li>
<li>
<p><em>byteOrder</em>: Порядок байтов, который будет использован для кодировки числа при записи. Если не установлен, то будет использован порядок байтов, заданный для текущего экземпляра объекта ЗаписьДанных.
Значение по умолчанию: Неопределено.</p>
</li>
</ul>
<h3>СброситьБуферы / Flush()</h3>
<p>Сбрасывает все внутренние буферы в целевой поток, после чего вызывает метод СброситьБуферы целевого потока.</p>
<h3>ЦелевойПоток / TargetStream()</h3>
<p>Возвращает целевой поток, в который выполняется запись.</p>
<h4>Возвращаемое значение</h4>
<h2>Конструкторы</h2>
<h3>По умолчанию</h3>
<p>Создает объект ЗаписьДанных для записи в указанный файл. Если файл с таким именем не существует, он будет создан. Параметр &lt;Дописать&gt; определяет, будут ли данные записаны в начало или в конец файла.
После завершения работы с объектом, до закрытия потока, переданного в конструктор, объект необходимо закрыть с помощью метода Закрыть или НачатьЗакрытие. При этом используемый файл будет закрыт автоматически.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>file_stream</em>: Имя файла или поток, в который будет выполнена запись.</p>
</li>
<li>
<p><em>textEncoding</em>: Кодировка текста для создаваемого экземпляра ЗаписьДанных. Если не задана, то используется UTF-8.
Значение по умолчанию: UTF8. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
</li>
<li>
<p><em>byteOrder</em>: Порядок байтов, используемый по умолчанию для кодирования целых чисел при записи в поток.
Значение по умолчанию: LittleEndian.</p>
</li>
<li>
<p><em>lineSplitter</em>: Разделитель по умолчанию для строк, записываемых в поток. Если разделитель строк не задан, то используется строка ПС.
Значение по умолчанию: ПС.</p>
</li>
<li>
<p><em>param5</em>: Для файла:
Определяет, будут ли данные записаны в начало или в конец файла:</p>
</li>
<li>Если Истина, то при открытии существующего файла запись будет выполнена в конец файла.</li>
<li>
<p>Иначе данные будут записываться с начала файла, перезаписывая существующие данные.
Если заданный файл не существует, будет создан новый файл с указанным именем и значение параметра не повлияет на поведение конструктора.
Значение по умолчанию: Ложь.
Для потока:
Определяет разделение строк в файле для конвертации в стандартный перевод строк ПС.
Значение по умолчанию: ВК + ПС.</p>
</li>
<li>
<p><em>param6</em>: Для файла:
Определяет разделение строк в файле для конвертации в стандартный перевод строк ПС.
Значение по умолчанию: ВК + ПС.
Для потока:
Если в начало файла или потока требуется записать метку порядка байтов (BOM) для используемой кодировки текста, то данный параметр должен иметь значение Истина.
Значение по умолчанию: Ложь.</p>
</li>
<li>
<p><em>param7</em>: Только для файла:
Если в начало файла требуется записать метку порядка байтов (BOM) для используемой кодировки текста, то данный параметр должен иметь значение Истина.
Значение по умолчанию: Ложь.</p>
</li>
</ul>

</body>
</html>