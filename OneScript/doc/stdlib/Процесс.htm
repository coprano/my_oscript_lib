<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>Процесс</title>
</head>
<body>
    <h1>Процесс / Process</h1>
<p>Позволяет управлять процессом операционной системы. Получать текст из стандартных потоков,
проверять активность, pid, завершать процесс и т.п.</p>
<h2>Свойства</h2>
<h3>КодировкаВывода / OutputEncoding</h3>
<p>Доступ: Чтение</p>
<p>Устанавливает кодировку в которой будут считываться стандартные потоки вывода и ошибок.</p>
<h3>ПотокВывода / StdOut</h3>
<p>Доступ: Чтение</p>
<p>ПотокВыводаТекста. Стандартный поток вывода (stdout)
в методе &quot;Завершен&quot; смотрите пример правильной обработки цикла ожидания завершения процесса:</p>
<h3>ПотокОшибок / StdErr</h3>
<p>Доступ: Чтение</p>
<p>ПотокВыводаТекста. Стандартный поток вывода ошибок (stderr)
в методе &quot;Завершен&quot; смотрите пример правильной обработки цикла ожидания завершения процесса:</p>
<h3>ПотокВвода / StdIn</h3>
<p>Доступ: Чтение</p>
<p>ПотокВводаТекста. Стандартный поток ввода (stdin)</p>
<h3>Завершен / HasExited</h3>
<p>Доступ: Чтение</p>
<p>Флаг указывает, что процесс завершен (или нет)</p>
<h4>Пример:</h4>
<pre><code>// Пример правильной обработки цикла ожидания завершения процесса:
// Процесс не завершается, пока любой из потоков (stdout, stderr) открыт для чтения.
// Процесс висит и ждет, пока его освободят от текста в обоих потоках.

Пока НЕ Процесс.Завершен ИЛИ Процесс.ПотокВывода.ЕстьДанные ИЛИ Процесс.ПотокОшибок.ЕстьДанные Цикл
Если ПериодОпросаВМиллисекундах &amp;lt;&amp;gt; 0 Тогда
Приостановить(ПериодОпросаВМиллисекундах);
КонецЕсли;

ОчереднаяСтрокаВывода = Процесс.ПотокВывода.Прочитать();
ОчереднаяСтрокаОшибок = Процесс.ПотокОшибок.Прочитать();
Если Не ПустаяСтрока(ОчереднаяСтрокаВывода) Тогда
Сообщить(ОчереднаяСтрокаВывода, СтатусСообщения.Информация);
КонецЕсли;

Если Не ПустаяСтрока(ОчереднаяСтрокаОшибок) Тогда
Сообщить(ОчереднаяСтрокаОшибок, СтатусСообщения.Важное);
КонецЕсли;
КонецЦикла;
</code></pre>

<h3>КодВозврата / ExitCode</h3>
<p>Доступ: Чтение</p>
<p>Код возврата завершенного процесса.</p>
<h3>Идентификатор / ProcessId</h3>
<p>Доступ: Чтение</p>
<p>PID процесса</p>
<h2>Методы</h2>
<h3>Запустить / Start()</h3>
<p>Запустить процесс на выполнение.
в методе &quot;Завершен&quot; смотрите пример правильной обработки цикла ожидания завершения процесса:</p>
<h3>ОжидатьЗавершения / WaitForExit()</h3>
<p>Приостановить выполнение скрипта и ожидать завершения процесса.</p>
<h4>Параметры</h4>
<ul>
<li><em>timeout</em>: Число. Таймаут в миллисекундах.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Булево. Ложь, если таймаут истек.</p>
<h3>Завершить / Stop()</h3>

</body>
</html>