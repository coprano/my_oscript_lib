<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>ЧтениеДанных</title>
</head>
<body>
    <h1>ЧтениеДанных / DataReader</h1>
<p>Объект предназначен для чтения различных типов данных из источника данных. В качестве источника могут выступать Поток, Файл или ДвоичныеДанные.
Необходимо соблюдать следующий порядок работы с данным объектом:</p>
<ul>
<li>Создать объект ЧтениеДанных на основании источника данных.</li>
<li>Выполнить требуемые действия с помощью объекта.</li>
<li>Закрыть экземпляр объекта ЧтениеДанных.
При необходимости использовать другие методы для работы с источником данных, требуется сначала закрыть экземпляр объекта ЧтениеДанных с помощью метода Закрыть, выполнить необходимые действия над источником, установить требуемую позицию для чтения из источника и создать новый экземпляр ЧтениеДанных.</li>
</ul>
<h2>Свойства</h2>
<h3>КодировкаТекста / TextEncoding</h3>
<p>Доступ: Чтение/Запись</p>
<p>Кодировка текста, используемая по-умолчанию для данного экземпляра ЧтениеДанных.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки.</p>
<h3>КонвертируемыйРазделительСтрок / ConvertibleSplitterOfLines</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Строка (String)</p>
<p>Конвертируемый разделитель строк. Этот параметр влияет на поведение метода ПрочитатьСимволы.</p>
<h3>ПорядокБайтов / ByteOrder</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: ПорядокБайтов (ByteOrder)</p>
<p>Порядок байтов по умолчанию.</p>
<h3>РазделительСтрок / LineSplitter</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Строка (String)</p>
<p>Разделитель строк по-умолчанию. Это свойство влияет на поведение метода ПрочитатьСтроку.</p>
<h3>ЧтениеЗавершено / ReadCompleted</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Содержит признак того, что во входном потоке больше нет данных для чтения. Изначально устанавливается в значение Ложь. Если при очередном чтении было прочитано меньше данных, чем было запрошено, принимает значение Истина.</p>
<h2>Методы</h2>
<h3>Закрыть / Close()</h3>
<p>Вызов данного метода завершает работу с текущим объектом. Если объект является владельцем вложенного потока, поток также закрывается.</p>
<h3>ИсходныйПоток / SourceStream()</h3>
<p>Получает исходный поток, из которого выполняется чтение данных.</p>
<h4>Возвращаемое значение</h4>
<h3>Пропустить / Skip()</h3>
<p>Пропускает при чтении указанное количество байтов в потоке.</p>
<h4>Параметры</h4>
<ul>
<li><em>number</em>: Количество байтов, которые требуется пропустить.</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>ПропуститьДо / SkipTo()</h3>
<p>Пропускает при чтении двоичные данные до указанного разделителя.</p>
<h4>Параметры</h4>
<ul>
<li><em>marker</em>: Маркер, до которого требуется пропустить данные.</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>Прочитать / Read()</h3>
<p>Выполняет чтение двоичных данных заданного размера из потока. Если размер не указан, будут прочитаны все данные до конца потока.</p>
<h4>Параметры</h4>
<ul>
<li><em>number</em>: Количество байтов, которые требуется прочитать. Если не задано, то выполняется чтение всех данных до конца потока.
Значение по умолчанию: Неопределено.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Содержит описание результата чтения данных из потока.</p>
<h3>ПрочитатьБайт / ReadByte()</h3>
<p>Выполняет чтение одного байта из потока.</p>
<h4>Возвращаемое значение</h4>
<p>Число или Неопределено, если не удалось прочитать байт, поскольку был достигнут конец потока.</p>
<h3>ПрочитатьВБуферДвоичныхДанных / ReadIntoBinaryDataBuffer()</h3>
<p>Прочитать байты из потока в БуферДвоичныхДанных.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>buffer</em>: Буфер двоичных данных, в который требуется поместить прочитанные байты.
или Количество байтов, которые требуется прочитать (остальные параметры игнорируются).
Если не задано, то выполняется чтение всех данных до конца потока.</p>
</li>
<li>
<p><em>positionInBuffer</em>: Позиция в буфере, начиная с которой требуется записать прочитанные данные.</p>
</li>
<li>
<p><em>number</em>: Количество байтов, которые требуется прочитать.</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>ПрочитатьДо / ReadTo()</h3>
<p>Выполняет чтение двоичных данных до указанного маркера.</p>
<h4>Параметры</h4>
<ul>
<li><em>marker</em>: Маркер, до которого выполняется чтение данных.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Содержит описание результата чтения данных из потока.</p>
<h3>ПрочитатьСимволы / ReadChars()</h3>
<p>Выполняет чтение заданного количества символов из потока в виде строки. Если количество символов не задано, выполняется чтение всего остатка потока.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>count</em>: Количество символов, которые требуется прочитать. Если не установлено, то будут прочитаны все символы до конца потока.
Значение по умолчанию: Неопределено.</p>
</li>
<li>
<p><em>encoding</em>: Определяет кодировку текста. Если не установлена, используется кодировка, заданная для данного объекта ЧтениеДанных.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста, так и в виде строки с указанием названия кодировки.
Значение по умолчанию: Неопределено. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>ПрочитатьСтроку / ReadLine()</h3>
<p>Выполняет чтение строки текста до разделителя строки. Если разделитель не найден, чтение выполняется до конца потока.
Если разделитель строки не задан явно, используется разделитель строки, указанный для данного экземпляра объекта ЧтениеДанных.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>encoding</em>: Кодировка текста. Если не установлена, используется кодировка, заданная для текущего экземпляра ЧтениеДанных.
Значение по умолчанию: Неопределено. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
</li>
<li>
<p><em>lineSplitter</em>: Указывает строку, являющуюся разделителем строк в читаемых данных. Если параметр не указан, используется разделитель строк, указанный для текущего экземпляра объекта ЧтениеДанных.
Значение по умолчанию: Неопределено.</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>ПрочитатьЦелое16 / ReadInt16()</h3>
<p>Считывает 16-битное целое число из потока.</p>
<h4>Параметры</h4>
<ul>
<li><em>byteOrder</em>: Порядок байтов, используемый при чтении числа.
Если не задан, используется порядок, определенный для текущего экземпляра ЧтениеДанных.
Значение по умолчанию: Неопределено.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Число или Неопределено, если не удалось прочитать число, поскольку был достигнут конец потока.</p>
<h3>ПрочитатьЦелое32 / ReadInt32()</h3>
<p>Считывает 32-битное целое число из потока.</p>
<h4>Параметры</h4>
<ul>
<li><em>byteOrder</em>: Порядок байтов, используемый при чтении числа.
Если не задан, используется порядок, определенный для текущего экземпляра ЧтениеДанных.
Значение по умолчанию: Неопределено.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Число или Неопределено, если не удалось прочитать число, поскольку был достигнут конец потока.</p>
<h3>ПрочитатьЦелое64 / ReadInt64()</h3>
<p>Считывает 64-битное целое число из потока.</p>
<h4>Параметры</h4>
<ul>
<li><em>byteOrder</em>: Порядок байтов, используемый при чтении числа.
Если не задан, используется порядок, определенный для текущего экземпляра ЧтениеДанных.
Значение по умолчанию: Неопределено.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Число или Неопределено, если не удалось прочитать число, поскольку был достигнут конец потока.</p>
<h3>Разделить / Split()</h3>
<p>Разделяет остаток данных по заданным разделителям.</p>
<h4>Параметры</h4>
<ul>
<li><em>separator</em>: Двоичный разделитель данных.</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>Разделить / Split()</h3>
<p>Разделяет остаток данных по заданным разделителям.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>separator</em>: Разделитель данных в виде строки.</p>
</li>
<li>
<p><em>encoding</em>: Кодировка текста. Если не задана, то используется кодировка, заданная для текущего экземпляра объекта ЧтениеДанных.
Значение по умолчанию: Неопределено. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<h3>РазделитьНаЧастиПо / SplitInPartsOf()</h3>
<p>Разделяет остаток данных на части заданного размера. Размер части указывается в байтах.</p>
<h4>Параметры</h4>
<ul>
<li><em>partSizw</em>: Размер части данных в байтах.</li>
</ul>
<h4>Возвращаемое значение</h4>
<h2>Конструкторы</h2>
<h3>На основании двоичных данных или имени файла</h3>
<p>Создает объект для чтения из заданного объекта ДвоичныеДанные.
После завершения работы с объектом ЧтениеДанных до того, как будет закрыт поток, переданный в конструктор,
объект следует закрыть с помощью метода Закрыть или НачатьЗакрытие.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>dataSource</em>: Путь к файлу или экземпляр объекта ДвоичныеДанные, из которого будет выполнено чтение.</p>
</li>
<li>
<p><em>textEncoding</em>: Определяет кодировку текста, используемую для чтения данных. По-умолчанию используется кодировка UTF-8.
Кодировка может быть задана как в виде значения перечисления КодировкаТекста,
так и в виде строки с указанием названия кодировки.</p>
</li>
</ul>
<p>Значение по умолчанию: UTF8. Типы: КодировкаТекста (TextEncoding), Строка (String)</p>
<ul>
<li>
<p><em>byteOrder</em>: Порядок байтов, используемый для декодирования целых чисел при чтении из потока.
Тип: перечисление ПорядокБайтов. Значение по умолчанию: LittleEndian.</p>
</li>
<li>
<p><em>lineSplitter</em>: Определяет строку, разделяющую строки в двоичных данных.
Значение по умолчанию: Неопределено.</p>
</li>
<li>
<p><em>convertibleSplitterOfLines</em>: Определяет разделение строк в файле для конвертации в стандартный перевод строк ПС.
Значение по умолчанию: ВК + ПС.</p>
</li>
</ul>

</body>
</html>