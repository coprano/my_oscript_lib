///////////////////////////////////////////////////////////////////////////////
//
// Служебный модуль с реализацией сценариев обработки файлов <ОтключениеПолнотекстовогоПоиска>
//
///////////////////////////////////////////////////////////////////////////////

// ИмяСценария
//	Возвращает имя сценария обработки файлов
//
// Возвращаемое значение:
//   Строка   - Имя текущего сценария обработки файлов
//
Функция ИмяСценария() Экспорт
	
	Возврат "ОтключениеРазрешенияИзменятьФорму";
	
КонецФункции // ИмяСценария()

// ОбработатьФайл
//	Выполняет обработку файла
//
// Параметры:
//  АнализируемыйФайл		- Файл - Файл из журнала git для анализа
//  КаталогИсходныхФайлов  	- Строка - Каталог расположения исходных файлов относительно каталог репозитория
//  ДополнительныеПараметры - Структура - Набор дополнительных параметров, которые можно использовать
//  	* Лог  					- Объект - Текущий лог
//  	* ИзмененныеКаталоги	- Массив - Каталоги, которые необходимо добавить в индекс
//		* КаталогРепозитория	- Строка - Адрес каталога репозитория
//		* ФайлыДляПостОбработки	- Массив - Файлы, изменившиеся / образовавшиеся в результате работы сценария
//											и которые необходимо дообработать
//
// Возвращаемое значение:
//   Булево   - Признак выполненной обработки файла
//
Функция ОбработатьФайл(АнализируемыйФайл, КаталогИсходныхФайлов, ДополнительныеПараметры) Экспорт
	
	Лог = ДополнительныеПараметры.Лог;

	Если НЕ АнализируемыйФайл.Существует() ИЛИ НЕ ТипыФайлов.ЭтоФайлОписанияФормы(АнализируемыйФайл) Тогда
		Возврат Ложь;
	КонецЕсли;

	ФайлДобавлен = ДополнительныеПараметры.Свойство("ТипИзменения") И
					ДополнительныеПараметры.ТипИзменения = ВариантИзмененийФайловGit.Добавлен;

	// При передаче через параметр команды exec-rules т.к. поведение ТипИзменения лучше не переопределять, 
	// ибо могут быть сайд эффекты
	ЯвныйЗапускСценария = ДополнительныеПараметры.Свойство("ЗатребованныеСценарии") И
							ДополнительныеПараметры.ЗатребованныеСценарии.Найти(ИмяСценария()) <> Неопределено;
	 
	Если ФайлДобавлен ИЛИ ЯвныйЗапускСценария Тогда
		
		Лог.Информация("Обработка файла '%1' по сценарию '%2'", АнализируемыйФайл.ПолноеИмя, ИмяСценария());
		
		ЭтоЕДТ = ТипыФайлов.ЭтоФайлОписанияФормыEDT(АнализируемыйФайл);
		
		Если ОтключитьРазрешить(АнализируемыйФайл.ПолноеИмя, ЭтоЕДТ) Тогда
			
			ДополнительныеПараметры.ИзмененныеКаталоги.Добавить(АнализируемыйФайл.ПолноеИмя);
			
		КонецЕсли;
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции // ОбработатьФайл()

Функция ОтключитьРазрешить(Знач ИмяФайла, ЭтоЕДТ)
	
	ТекстФайла = ФайловыеОперации.ПрочитатьТекстФайла(ИмяФайла);
	СодержимоеФайла = ТекстФайла;
	
	Если Не ЗначениеЗаполнено(СодержимоеФайла) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;

	Если ЭтоЕДТ Тогда
		
		Регексп = РегулярныеВыражения.Создать("(<allowFormCustomize>)(true)(<\/allowFormCustomize>)");
		
		Совпадения = Регексп.НайтиСовпадения(СодержимоеФайла);
		
		Если Совпадения.Количество() = 0 Тогда
			
			Возврат Ложь;
			
		КонецЕсли;
		
		СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, "$1false$3");
		
	Иначе
		// В случае выгрузки кофигуратора может быть 3 состояния тега Customizable
		// Тег отсутствует - значит по умолчанию включен и надо добавить его со значением false
		// Тег присутствует и имеет значение true. Надо изменить значение
		// Тег присутствует и имеет значение false. Ничего делать не надо

		Регексп = РегулярныеВыражения.Создать("(<Customizable>)(true|false)(<\/Customizable>)");
		
		Совпадения = Регексп.НайтиСовпадения(СодержимоеФайла);
		
		Если Совпадения.Количество() = 0 Тогда // по умолчанию включено, следовательно надо добавить этот тег
			
			Регексп = РегулярныеВыражения.Создать("(^(.*)<WindowOpeningMode>.+$)"); // цепляем к стабильному тегу сохраняя пробелы
			ШаблонЗамены = СтрШаблон("%1%2%3%4%5", "$1", Символы.ПС, "$2", "<Customizable>false</Customizable>", Символы.ПС);
			
			СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, ШаблонЗамены);
			
		ИначеЕсли Совпадения[0].Группы[2].Значение = "true" Тогда // проверим тег и изменим его если надо
			
			СодержимоеФайла = Регексп.Заменить(СодержимоеФайла, "$1false$3");
			
		Иначе // Тег уже false
			Возврат Ложь;
		КонецЕсли;
		
	КонецЕсли;

	ФайловыеОперации.ЗаписатьТекстФайла(ИмяФайла, СодержимоеФайла);
	
	Возврат Истина;
	
КонецФункции
