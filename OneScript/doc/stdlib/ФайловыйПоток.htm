<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>ФайловыйПоток</title>
</head>
<body>
    <h1>ФайловыйПоток / FileStream</h1>
<p>Специализированная версия объекта Поток для работы данными, расположенными в файле на диске. Предоставляет возможность чтения из потока, записи в поток и изменения текущей позиции.
По умолчанию, все операции с файловым потоком являются буферизированными, размер буфера по умолчанию - 8 КБ.
Размер буфера можно изменить, в том числе - полностью отключить буферизацию при вызове конструктора.
Следует учитывать, что помимо буферизации существует кэширование чтения и записи файлов в операционной системе, на которое невозможно повлиять программно.</p>
<h2>Свойства</h2>
<h3>ДоступнаЗапись / CanWrite</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Признак доступности записи в поток.</p>
<h3>ДоступноИзменениеПозиции / CanSeek</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Признак доступности произвольного изменения позиции чтения/записи в потоке.</p>
<h3>ДоступноЧтение / CanRead</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Признак доступности чтения из потока.</p>
<h3>ДоступенТаймаут / CanTimeout</h3>
<p>Доступ: Чтение</p>
<p>Тип значения: Булево (Boolean)</p>
<p>Признак доступности установки таймаута чтения/записи в потоке.</p>
<h3>ТаймаутЧтения / ReadTimeout</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Число (int)</p>
<p>Время в миллисекундах, отведенное потоку на операцию чтения.</p>
<h3>ТаймаутЗаписи / WriteTimeout</h3>
<p>Доступ: Чтение/Запись</p>
<p>Тип значения: Число (int)</p>
<p>Время в миллисекундах, отведенное потоку на операцию записи.</p>
<h3>ИмяФайла / FileName</h3>
<p>Доступ: Чтение</p>
<p>Содержит полное имя файла, включая путь</p>
<h2>Методы</h2>
<h3>Закрыть / Close()</h3>
<p>Вызов данного метода завершает работу с потоком. При попытке вызвать любой метод объекта, кроме метода Закрыть, будет вызвано исключение.
При повторном вызове данного метода никаких действий выполняться не будет.
Выполняемое действие зависит от используемого типа потока.</p>
<h3>Записать / Write()</h3>
<p>Записывает в поток заданное количество байтов из буфера по заданному смещению. Если в буфере меньше данных, чем требуется записать, вызывается исключение о недостаточном количестве данных в буфере.
Запись в поток возможна только, если поток поддерживает запись. В противном случае при вызове метода будет вызвано исключение.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>buffer</em>: Буфер, из которого выбираются данные для записи.</p>
</li>
<li>
<p><em>positionInBuffer</em>: Позиция в буфере, начиная с которой данные будут получены для записи в поток.</p>
</li>
<li>
<p><em>number</em>: Количество байт, которые требуется записать.</p>
</li>
</ul>
<h3>КопироватьВ / CopyTo()</h3>
<p>Копирует данные из текущего потока в другой поток.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>targetStream</em>: Поток, в который будет выполняться копирование.</p>
</li>
<li>
<p><em>bufferSize</em>: Размер буфера, используемого при копировании.
Если параметр не задан, то система подбирает размер буфера автоматически.</p>
</li>
</ul>
<h3>Перейти / Seek()</h3>
<p>Сдвигает текущую позицию потока на заданное количество байтов относительно начальной позиции. Если указано отрицательное смещение, позиция сдвигается в направлении к началу потока.
Если изменение позиции недоступно (ДоступноИзменениеПозиции установлено в Ложь), будет сгенерировано исключение.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>offset</em>: Количество байтов, на которое нужно передвинуть позицию в потоке.</p>
</li>
<li>
<p><em>initialPosition</em>: Начальная позиция, от которой отсчитывается смещение.</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Числовым типом может быть представлено любое десятичное число. Над данными числового типа определены основные арифметические операции: сложение, вычитание, умножение и деление. Максимально допустимая разрядность числа 38 знаков.</p>
<h3>ПолучитьПотокТолькоДляЧтения / GetReadonlyStream()</h3>
<p>Возвращает поток, который разделяет данные и текущую позицию с данным потоком, но не разрешает запись.</p>
<h4>Возвращаемое значение</h4>
<h3>Прочитать / Read()</h3>
<p>Выполняет чтение заданного количества байтов в указанный буфер по указанному смещению. Текущая позиция смещается вперед на фактическое количество прочитанных байтов.
Чтение из потока возможно только, если поток поддерживает чтение. В противном случае, будет вызвано исключение.
При чтении размер целевого буфера не меняется, а его содержимое перезаписывается фактически прочитанными данными. Если в буфере недостаточно места для записи прочитанных данных, происходит ошибка переполнения.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>buffer</em>: Буфер, в который выполняется чтение.</p>
</li>
<li>
<p><em>positionInBuffer</em>: Позиция в целевом буфере, начиная с которой требуется записывать данные из потока.</p>
</li>
<li>
<p><em>number</em>: Количество байт, которые требуется записать в целевой буфер.</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Возвращает число прочитанных байт</p>
<h3>Размер / Size()</h3>
<p>Получает размер данных в байтах.</p>
<h3>СброситьБуферы / Flush()</h3>
<p>Сбрасывает все промежуточные буферы и производит запись всех незаписанных данных в целевое устройство.</p>
<h3>ТекущаяПозиция / CurrentPosition()</h3>
<p>Возвращает текущую позицию в потоке.</p>
<h4>Возвращаемое значение</h4>
<p>Числовым типом может быть представлено любое десятичное число. Над данными числового типа определены основные арифметические операции: сложение, вычитание, умножение и деление. Максимально допустимая разрядность числа 38 знаков.</p>
<h3>УстановитьРазмер / SetSize()</h3>
<p>Устанавливает размер потока.
Если текущий размер превышает заданный, поток будет сокращен до заданного размера, а информация, превышающая заданный размер, будет потеряна.
Если текущий размер потока меньше заданного, то содержимое потока между старым и новым размером не определено.</p>
<h4>Параметры</h4>
<ul>
<li><em>size</em>: Устанавливаемый размер потока.</li>
</ul>
<h2>Конструкторы</h2>
<h3>С указанием режима открытия</h3>
<h3>С указанием режима открытия и уровня доступа</h3>

</body>
</html>