#Область ОписаниеПеременных

Перем ТекстШаблонаОбъектаДекоратора;       // Шаблон объекта декоратора
Перем ТекстШаблонаПользовательскогоМетода; // Шаблон добавляемого метода

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Текст шаблона с содержимым сценария декоратора
//
//  Возвращаемое значение:
//   Строка - Текст сценария
//
Функция ТекстШаблонаОбъектаДекоратора() Экспорт
	Возврат ТекстШаблонаОбъектаДекоратора;
КонецФункции

Функция ТекстШаблонаМетодаДекоратора() Экспорт
	Возврат ТекстШаблонаПользовательскогоМетода;
КонецФункции

Функция ТекстШаблонаПользовательскогоМетода() Экспорт
	Возврат ТекстШаблонаПользовательскогоМетода;
КонецФункции

#КонецОбласти

ТекстШаблонаОбъектаДекоратора = "
|
|// {Область импортов}
|
|// {Область переменных}
|
|Перем Декоратор_ИсходныйОбъект;
|Перем Декоратор_Лог;
|
|// {Область методов}
|
|// #Область Инициализация
|
|Декоратор_Лог = Логирование.ПолучитьЛог(""oscript.lib.decorator.object"");
|
|// {Инициализация}
|
|// #КонецОбласти
|
|";

ТекстШаблонаПользовательскогоМетода = "
|
|// {АннотацияМетода}
|{Функция} Декоратор_ИмяМетода(Декоратор_ОписаниеПараметровМетода) // {Экспорт}
|
|	// {Декоратор_ПередСинхронизациейПолей}
|	// {Декоратор_СинхронизироватьПоляПеред}
|
|	Декоратор_ВозвращаемоеИзМетодаЗначение = NULL;
|
|	// {Декоратор_ПередВызовомМетода}
|
|	Попытка
|
|		// {Декоратор_ВыполняемаяСтрока};
|
|	Исключение
|
|		// {Декоратор_СинхронизироватьПоляПосле}
|
|		// {Декоратор_ПослеВызоваИсключения}
|
|		ВызватьИсключение;
|
|	КонецПопытки;
|
|	// {Декоратор_СинхронизироватьПоляПосле}
|
|	Если Декоратор_ВозвращаемоеИзМетодаЗначение = Декоратор_ИсходныйОбъект Тогда
|		Декоратор_ВозвращаемоеИзМетодаЗначение = ЭтотОбъект;
|	КонецЕсли;
|
|	// {Декоратор_ПослеВызоваМетода}
|
|	// {Декоратор_ВозвращаемоеЗначение}
|
|{КонецФункции}
|
|{Функция} ДекораторВнутренний_ИмяМетода(Декоратор_ОписаниеПараметровМетода)
|
|	// {Декоратор_ТекстМетода}
|
|{КонецФункции}
|
|";
