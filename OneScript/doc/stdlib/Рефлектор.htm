<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <title>Рефлектор</title>
</head>
<body>
    <h1>Рефлектор / Reflector</h1>
<p>Рефлектор предназначен для получения метаданных объектов во время выполнения.
Как правило, рефлексия используется для проверки наличия у объекта определенных свойств/методов.
В OneScript рефлексию можно применять для вызова методов объектов по именам методов.</p>
<h2>Методы</h2>
<h3>ВызватьМетод / CallMethod()</h3>
<p>Вызывает метод по его имени.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>target</em>: Объект, метод которого нужно вызвать.</p>
</li>
<li>
<p><em>methodName</em>: Имя метода для вызова</p>
</li>
<li>
<p><em>arguments</em>: Массив аргументов, передаваемых методу. Следует учесть, что все параметры нужно передавать явно, в том числе необязательные.</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Если вызывается функция, то возвращается ее результат. В противном случае возвращается Неопределено.</p>
<h3>МетодСуществует / MethodExists()</h3>
<p>Проверяет существование указанного метода у переданного объекта.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>target</em>: Объект, из которого получаем таблицу методов.</p>
</li>
<li>
<p><em>methodName</em>: Имя метода для вызова</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Истина, если метод существует, и Ложь в обратном случае.</p>
<h3>ПолучитьТаблицуМетодов / GetMethodsTable()</h3>
<p>Получает таблицу методов для переданного объекта..</p>
<h4>Параметры</h4>
<ul>
<li><em>target</em>: Объект, из которого получаем таблицу методов.</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Таблица значений колонками: Имя, Количество, ЭтоФункция, Аннотации</p>
<h3>ПолучитьТаблицуСвойств / GetPropertiesTable()</h3>
<p>Получает таблицу свойств для переданного объекта..</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>target</em>: Объект, из которого получаем таблицу свойств.</p>
</li>
<li>
<p><em>withPrivate</em>: Включая приватные</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Таблица значений с колонками - Имя, Аннотации</p>
<h3>ПолучитьСвойство / GetProperty()</h3>
<p>Получает свойство по его имени.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>target</em>: Объект, свойство которого необходимо установить.</p>
</li>
<li>
<p><em>prop</em>: Имя свойства</p>
</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>Значение свойства</p>
<h3>УстановитьСвойство / SetProperty()</h3>
<p>Устанавливает свойство по его имени.</p>
<h4>Параметры</h4>
<ul>
<li>
<p><em>target</em>: Объект, свойство которого необходимо установить.</p>
</li>
<li>
<p><em>prop</em>: Имя свойства</p>
</li>
<li>
<p><em>value</em>: Значение свойства.</p>
</li>
</ul>
<h3>ИзвестныеТипы / KnownTypes()</h3>
<p>Возвращает все известные типы</p>
<h4>Параметры</h4>
<ul>
<li><em>filter</em>: Структура - Условия поиска. Ключ - имя колонки, значение - искомое значение</li>
</ul>
<h4>Возвращаемое значение</h4>
<p>ТаблицаЗначений:
* Имя - Строка - Имя типа
* Значение - Тип - Тип
* Примитивный - Булево - Это примитивный тип
* Пользовательский - Булево - Это пользовательский типа
* Коллекция - Булево - Это коллекция</p>
<h2>Конструкторы</h2>
<h3>По умолчанию</h3>

</body>
</html>