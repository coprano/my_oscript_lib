#Использовать logos

Перем Лог;

Перем НомераСостояний;
Перем ПоследнийНомар; 

// Выполняет заполнение значений параметров команды
//
// Параметры:
//   КонтейнерыЗначений - Объект - ссылка на Класс ПараметрКоманды
//
Процедура ЗаполнитьЗначения(КонтейнерыЗначений) Экспорт

	Для каждого Контейнер Из КонтейнерыЗначений Цикл

		Лог.Отладка("Заполняю значения %1", Контейнер.Ключ);

		Если Контейнер.Ключ.ЭтоМассив() Тогда
			Контейнер.Ключ.Очистить();
		КонецЕсли;

		Лог.Отладка("Контейнер <%1> массив %2", Контейнер.Ключ, Контейнер.Ключ.ЭтоМассив());
		
		Для каждого значениеКонтейнера Из Контейнер.Значение Цикл
		
			Лог.Отладка("Установил значения %1 в контейнер %2", значениеКонтейнера, Контейнер.Ключ);
			Контейнер.Ключ.УстановитьЗначение(значениеКонтейнера);

		КонецЦикла;

		Контейнер.Ключ.УстановленаИзПеременнойОкружения = Ложь;

		Если Не Контейнер.Ключ.УстановленаПользователем Тогда
			Контейнер.Ключ.УстановленаПользователем = Истина;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//   НачальноеСостояние - <Тип.Вид> - <описание параметра>
//   Состояние - <Тип.Вид> - <описание параметра>
//   ПосетилиСостояние - <Тип.Вид> - <описание параметра>
//
Процедура УпроститьСоединения(НачальноеСостояние, Состояние, ПосетилиСостояние) Экспорт

	Лог.Отладка("Я УпроститьСоединения");
		
	Если ПосетилиСостояние[Состояние] = Истина Тогда
		Лог.Отладка("Я уже тут был");
		Возврат;
	КонецЕсли;

	ПосетилиСостояние.Вставить(Состояние, Истина);
	
	Для каждого Соединение Из Состояние.МассивСоединений Цикл
		
		УпроститьСоединения(НачальноеСостояние, Соединение.СледующееСостояние, ПосетилиСостояние);

	КонецЦикла;

	Пока Истина Цикл
		Если Не Состояние.УпроститьСвоиСоединения() Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

// <Описание функции>
//
// Параметры:
//   Состояние - <Тип.Вид> - <описание параметра>
//
//  Возвращаемое значение:
//   <Тип.Вид> - <описание возвращаемого значения>
//
Функция НомерСостояния(Состояние) Экспорт
	
	Номер = НомераСостояний[Состояние];
	
	Если Номер = Неопределено Тогда
		ПоследнийНомар = ПоследнийНомар + 1;
		Номер = ПоследнийНомар;

		НомераСостояний.Вставить(Состояние, Номер);

	КонецЕсли;

	Возврат Номер;
	
КонецФункции

// <Описание функции>
//
// Параметры:
//   Состояние - <Тип.Вид> - <описание параметра>
//
//  Возвращаемое значение:
//   <Тип.Вид> - <описание возвращаемого значения>
//
Функция ИмяСостояния(Состояние) Экспорт

	Номер = НомерСостояния(Состояние);

	Если Состояние.Завершено Тогда
		
		Возврат СтрШаблон("(S%1)", Номер);

	КонецЕсли;
	
	Возврат СтрШаблон("S%1", Номер);
	
КонецФункции

// <Описание функции>
//
// Параметры:
//   НачальноеСостояние - <Тип.Вид> - <описание параметра>
//
//  Возвращаемое значение:
//   <Тип.Вид> - <описание возвращаемого значения>
//
Функция СгенеритьСтрокуПути(НачальноеСостояние) Экспорт

	ПосетилиСостояние = Новый Соответствие;

	МассивСтрок = СостояниеВСтрокуПути(НачальноеСостояние, НомераСостояний, ПосетилиСостояние);

	Возврат СтрСоединить(МассивСтрок, Символы.ПС);
	
КонецФункции

Функция СостояниеВСтрокуПути(Состояние, НомераСостояний, ПосетилиСостояние)

	МассивСтрок = Новый Массив;
	Если ПосетилиСостояние[Состояние] = Истина Тогда
		Возврат МассивСтрок;
	КонецЕсли;

	ПосетилиСостояние.Вставить(Состояние, Истина);
	
	Для каждого Соединение Из Состояние.МассивСоединений Цикл
		
		МассивСтрок.Добавить(СтрШаблон("%1 %2 %3",
										ИмяСостояния(Состояние),
										Соединение.Парсер.ВСтроку(), 
										ИмяСостояния(Соединение.СледующееСостояние)));

		СоединитьМассивы(МассивСтрок, СостояниеВСтрокуПути(Соединение.СледующееСостояние, НомераСостояний, ПосетилиСостояние));
		
	КонецЦикла;

	Возврат МассивСтрок;

КонецФункции

Процедура СоединитьМассивы(ИсходныйМассив, ПрисоединяемыйМассив)
	
	Для каждого Переменная Из ПрисоединяемыйМассив Цикл
		ИсходныйМассив.Добавить(Переменная);
	КонецЦикла;

КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//   Состояние - <Тип.Вид> - <описание параметра>
//   ПосетилиСостояние - <Тип.Вид> - <описание параметра>
//
Процедура СортировкаСоединений(Состояние, ПосетилиСостояние) Экспорт
	
	Если ПосетилиСостояние[Состояние] = Истина Тогда
		Возврат;
	КонецЕсли;

	ПосетилиСостояние.Вставить(Состояние, Истина);
	
	СортироватьМассив(Состояние.МассивСоединений);

	Для каждого Соединение Из Состояние.МассивСоединений Цикл
		СортировкаСоединений(Соединение.СледующееСостояние, ПосетилиСостояние);
	КонецЦикла;

КонецПроцедуры

Процедура СортироватьМассив(МассивСоединений)

    Для ТекущийИндекс = 0 По МассивСоединений.Количество() - 1 Цикл
        Флаг = Ложь;
        КоличествоСоединений = МассивСоединений.Количество() - 1;
        Пока КоличествоСоединений > ТекущийИндекс Цикл
            Элемент = МассивСоединений[КоличествоСоединений - 1];
            СледующийЭлемент = МассивСоединений[КоличествоСоединений];
            РезультатСортировки = Элемент.Парсер.Приоритет() > СледующийЭлемент.Парсер.Приоритет();
            Если РезультатСортировки > 0 Тогда
                МассивСоединений[КоличествоСоединений - 1] = СледующийЭлемент;
                МассивСоединений[КоличествоСоединений] = Элемент;
                Флаг = Истина;
            КонецЕсли;
            КоличествоСоединений = КоличествоСоединений - 1;
        КонецЦикла;
        Если НЕ Флаг Тогда
            Прервать;
        КонецЕсли;
    КонецЦикла;

КонецПроцедуры

// <Описание функции>
//
//  Возвращаемое значение:
//   <Тип.Вид> - <описание возвращаемого значения>
//
Функция НовоеСостояние() Экспорт
	Возврат Новый Совпадение();
КонецФункции

НомераСостояний = Новый Соответствие;
ПоследнийНомар = 0;
Лог = Логирование.ПолучитьЛог("oscript.lib.cli_path");